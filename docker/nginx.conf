user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent"';
  access_log  /var/log/nginx/access.log  main;

  sendfile           on;
  tcp_nopush         on;
  tcp_nodelay        on;
  keepalive_timeout  65;
  types_hash_max_size 2048;

  # Segurança
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options DENY;
  add_header X-XSS-Protection "1; mode=block";

  # GZIP
  gzip              on;
  gzip_min_length   1000;
  gzip_proxied      any;
  gzip_vary         on;
  gzip_types        text/plain
                    text/css
                    application/json
                    application/javascript
                    text/xml
                    application/xml
                    application/xml+rss
                    image/svg+xml;

  # Cache estático
  proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=static:10m max_size=1g inactive=60m use_temp_path=off;
  proxy_cache_key  "$scheme$request_method$host$request_uri";

  server {
    listen       80;
    server_name  _;
    root         /usr/share/nginx/html;
    index        pages/dashboard.html;

    # Healthcheck endpoint
    location = /healthz {
      return 200 'OK';
      add_header Content-Type text/plain;
    }

    # Permitir Service Worker
    add_header Service-Worker-Allowed / always;

    # Manifest PWA
    location = /manifest.webmanifest {
      alias /usr/share/nginx/html/pwa/manifest.webmanifest;
      add_header Cache-Control "public, max-age=2592000, immutable";
      add_header Content-Type application/manifest+json;
    }

    # Service Worker
    location = /pwa/sw.js {
      alias /usr/share/nginx/html/pwa/sw.js;
      add_header Service-Worker-Allowed /;
      add_header Cache-Control "public, max-age=0, no-cache";
    }

    # Cache agressivo para assets estáticos
    location ~* \.(?:css|js|png|jpg|jpeg|svg|ico|webmanifest|woff2?|ttf|eot)$ {
      expires 30d;
      add_header Cache-Control "public, no-transform";
      try_files $uri =404;
    }

    # Proxy para API backend
    location /api/ {
      proxy_pass          http://backend:8081;
      proxy_set_header    Host $host;
      proxy_set_header    X-Real-IP $remote_addr;
      add_header          Access-Control-Allow-Origin *;
      add_header          Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
      add_header          Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
    }

    # Bloquear métodos não GET/HEAD/OPTIONS
    limit_except GET HEAD OPTIONS {
      deny all;
    }

    # SPA/PWA fallback
    location / {
      try_files $uri $uri/ /pages/dashboard.html;
    }

    # Página offline
    error_page 404 /offline.html;
    location = /offline.html {
      alias /usr/share/nginx/html/offline.html;
      add_header Cache-Control "public, max-age=0, no-cache";
    }

    # Bloquear streams via Service Worker
    location ~* \.(?:m3u8|mp4|mpd)$ {
      return 403;
    }
  }
}
